#
# HonSSH Default Configuration File (honssh-default.cfg)
# 
# Copy this file to honssh.cfg and modify the values as needed for your environment.
#

#----------------------------------------------#
#                 GENERAL SETUP                #
#----------------------------------------------#

#-----------------------#
#       HONEYPOT        #
#-----------------------#
[honeypot]

# IP addresses to listen for incoming SSH connections.
#
# input: IP Address
# required: YES
ssh_addr = 0.0.0.0

# Port to listen for incoming SSH connections.
#
# input: Number
# required: YES
# default: 2222
ssh_port = 2222

# IP addresses to send outgoing SSH connections.
# 0.0.0.0 for all interfaces
#
# input: IP Address
# required: YES
client_addr = 0.0.0.0

# Public and private SSH key files. 
#
# input: Text
# required: YES
# default: id_rsa.pub
# default: id_rsa
# default: id_dsa.pub
# default: id_dsa
public_key = id_rsa.pub
private_key = id_rsa
public_key_dsa = id_dsa.pub
private_key_dsa = id_dsa

# SSH banner to send to clients
# If not specified, HonSSH will try and obtain it by connecting to
# honey_addr:honey_port
# 
# input: text
# required: No
# default: 
ssh_banner =

# connection_timeout: connection timeout for pre and post auth handlers
# required: YES
# default: 10
connection_timeout = 10

#-----------------------#
#   HONEYPOT STATIC     #
#-----------------------#
[honeypot-static]
# Documentation to come, stick with these options and ignore honeypot-* unless you know what you are doing or fancy a challenge
enabled = true

# Should HonSSH use this plugin to get the honeypot details (before authentication)
pre-auth = true

# Should HonSSH use this plugin to get the honeypot details (after authentication)
post-auth = true

# This name will be used when logging to any of the output mechanisms.
# Please ensure it is meaningful.
#
# input: Text
# required: YES
sensor_name = HonSSH

# IP addresses of the honeypot.
#
# input: IP Address
# required: YES
honey_ip = 127.0.0.1

# SSH port of the honeypot.
#
# input: Number
# required: YES
# default: 22
honey_port = 22

#-----------------------#
#   HONEYPOT SCRIPT     #
#-----------------------#
[honeypot-script]
# Documentation to come
enabled = false

# Should HonSSH use this plugin to get the honeypot details (before authentication)
pre-auth = false

# Should HonSSH use this plugin to get the honeypot details (after authentication)
post-auth = false

# The Script to run.
script = 

#-----------------------#
#   HONEYPOT DOCKER     #
#-----------------------#
[honeypot-docker]
enabled = false

# Should HonSSH use this plugin to get the honeypot details (before authentication)
pre-auth = false

# Should HonSSH use this plugin to get the honeypot details (after authentication)
post-auth = false

# This name will be used when logging to any of the output mechanisms.
# Please ensure it is meaningful.
#
# input: Text
# required: YES
sensor_name = HonSSH

# docker_image: the name of the docker image (without the tag)
# 
# input: Text
# required: YES 
docker_image = 

# docker_tag: the tag for the docker image
#
# input: Text
# required: NO
# default: latest
docker_tag = latest

# docker_host: The IP address of the system hosting the Docker daemon
# Note: Do NOT use this unless you know what you are doing
#
# input: IP Address
# required: NO
# default: 127.0.0.1
docker_host = 127.0.0.1

# docker_port: The port of the Docker daemon
# Note: Do NOT use this unless you know what you are doing
#
# input: Number
# required: NO
# default: 2375
docker_port = 2375

# use_docker_api: Connect to docker using Docker API instead of local commands
# Note: Do NOT use this unless you know what you are doing
#
# input: true/false
# required: YES
# default: false
use_docker_api = false

# overlay_folder: Save all changes made to the docker container filesystem into given session
# subdirectory. This includes changes made by the attacker and by the system itself!
# Make sure to apply quotas.
# This feature does *NOT* work with remote docker hosts.
#
# Nothing is saved if left empty.
#
# Supported storage drivers:
# - aufs
# - btrfs
# - overlay
# - overlay2
#
# Warning:
# - This delays the connection until all watches are added
# - This may have a performance impact (depends on the amount of running containers and your hardware)
#
# required: NO
overlay_folder =

# overlay_max_filesize: maximum filesize (kb) to copy.
# Use 0 for unlimited size. Please consider using quotas on your filesystem.
#
# required: NO
# default: 51200 (50 MB)
overlay_max_filesize =

# overlay_use_revisions:
# If 'false' the same file will be overwritten on subsequent modifications.
# If 'true' every file modification will create a new file with running counter appended.
#
# Be careful!! In conjunction with a large overlay_max_filesize or set to 0 this
# can fill your filesystem quite fast. Please consider using quotas on your filesystem.
#
# required: NO
# default: false
overlay_use_revisions =

# reuse_container: If activated containers will be linked to the attackers IP address
# and restarted on subsequent connects from the same IP address.
#
# required: YES
reuse_container = false

# reuse_ttl: Defines how long a stopped container should be retained for reuse.
# The amount is measured in minutes.
# Use '0' for no cleanup.
# reuse_container has to be activated.
#
# required = NO
# default: 1440 (24 hours)
reuse_ttl = 1440

# launch_cmd: Overwrite start command for docker container
#
# input: Text
# required: NO
launch_cmd = 

# pre_cmd: Launch command within the docker container before the user connects. 
# Useful for running any start-up scripts in the background.
# You must surround the command in double quotes
#
# input: Text
# required: NO
pre_cmd = 

# post_cmd: Launch command within the docker container after the user disconnects.
# Useful for running any clean-up scripts.
# You must surround the command in double quotes
#
# input: Text
# required: NO
post_cmd = 

# hostname: Set the hostname of the container. 
# If blank a random UUID will be used
#
# input: Text
# required: NO
hostname = 

# honey_port_cmd: Override the port part of the honey_port.
# Only necessary if there is no sshd running on your docker container
# You must surround the command in double quotes
# 
# input: Text
# required: NO
honey_port_cmd = 

# docker_memory: The memory available to the container - e.g 256M, 1024M
#
# input: Text
# required: NO
docker_memory = 

# docker_cpu_shares: The number of CPU shares to allocate to the container
#
# input: Number
# required: NO
docker_cpu_shares = 

# docker_cpuset_cpus: Which CPUs to use - e.g 0-2, 0,2
# 
# required: NO
cpuset_cpus = 

#-----------------------#
# HONEYPOT RESTRICTIONS #
#-----------------------#
[hp-restrict]

# When enabled, HonSSH will restrict connections to password only and decline any public keys.
# HonSSH will not work with public keys - this should always be true.
#
# input: true/false
# required: YES
# default: true
disable_publicKey = true

# When enabled, HonSSH will block any attempts to start an X11 session.
# You can allow X11 but HonSSH will not log the session.
#
# input: true/false
# required: YES
# default: true
disable_x11 = true

# When enabled, HonSSH will block any attempts to start an SFTP session.
# HonSSH will log SFTP traffic and capture downloaded files.
#
# input: true/false
# required: YES
# default: false
disable_sftp = false

# When enabled, HonSSH will block any attempts to start an EXEC session.
# HonSSH will log all EXEC sessions, including SCP transfers.
#
# input: true/false
# required: YES
# default: false
disable_exec = false

# When enabled, HonSSH will block any attempts to start running port forwarding over SSH.
# You can allow port forwarding but HonSSH will not log the session - Yet! (log to PCAP?)
#
# input: true/false
# required: YES
# default: true
disable_port_forwarding = true

#-----------------------#
#   OUTPUT DIRECTORIES  #
#-----------------------#
[folders]

# Location of the logs
#
# input: Text
# required: YES
# default: logs
log_path = logs

# Location of the TTY Logs
#
# input: Text
# required: YES
# default: logs/tty/
tty_log_path = logs/tty/

# Location to save downloaded files
#
# input: Text
# required: YES
# default: logs/downloads/
session_path = sessions

# Location to save downloaded files
#
# input: Text
# required: YES
# default: logs/downloads/
download_path = logs/downloads/

#-----------------------#
#     INTERACTIONS      #
#-----------------------#
[interact]

# Session management interface.
#
# This is a TCP based service that can be used to interact with active
# sessions. Disabled by default.
#
# Use honsshInteraction.py to interact with this interface.
#
# input: true/false
# required: YES
# default: false
enabled = false  

# Interface to create the interaction on - 0.0.0.0 for all.
#
# input: IP Address
# required: if interact_enabled = true
# default: 127.0.0.1
interface = 127.0.0.1

# Port to create the interaction on
#
# input: Number
# required: if interact_enabled = true
# default: 5123
port = 5123

#-----------------------#
#   PASSWORD SPOOFING   #
#-----------------------#
[spoof]

# Enabling this will allow HonSSH to spoof an incorrect password with the real password. 
# A list of users and passwords must be defined in the users.cfg file.
#
# Passwords to spoof can either be a fixed list or a random chance.
# 
# See the Wiki page for more details.
# https://github.com/tnich/honssh/wiki/Password-Spoofing
#
# input: true/false
# required: YES
# default: false
enabled = false

# Location of the users.cfg file
#
# input: text
# required: if enabled is true
# default: users.cfg
users_conf = users.cfg

#-----------------------#
#      TEXT LOGGING     #
#-----------------------#
[output-txtlog]

# All activity will be logged to text files
#
# input: true/false
# required: yes
# default: true
enabled = true

#-----------------------#
#      MYSQL LOGGING    #
#-----------------------#
[output-mysql]

# All activity will be logged to a MYSQL Database
# Database structure for this module is supplied in utils/honssh.sql
#
# input: true/false
# required: yes
# default: false
enabled = false

# IP address of the database
#
# input: IP Address
# required: if enabled = true
# default: localhost
host = localhost

# Port to connect to the database on
#
# input: Number
# required: NO
# default: 3306
port = 3306

# Name of the database
#
# input: Text
# required: if enabled = true
database = 

# Username to authenticate with the database
#
# input: Text
# required: if enabled = true
username = 

# Password to authenticate with the database
#
# input: Text
# required: if enabled = true
password = 

#-----------------------#
#      EMAIL LOGGING    #
#-----------------------#
[output-email]

# All activity will be emailed
# Event types:
# login - log logins/attempted logins
# attack - Log commands entered on the honeypot
#
# input: true/false
# required: YES
# default: false
enabled = false

# Event types to alert on. (login, attack)
#
# input: text
# required: if enabled = true
# default: login,attack
events = login,attack

# Your SMTP settings to send the email through
#
# input: IP Address/URL
# required: if enabled = true
host = 

# Port for SMTP connection
#
# input: Number
# required: NO
# default: 25
port = 25

# Whether to use SMTP authentication
#
# input: true/false
# required: YES
# default: true
use_smtpauth = true

# Your SMTP login username
#
# input: Text
# required: if use_smtpauth = true
username = 

# Your SMTP login password
#
# input: Text
# required: if use_smtpauth = true
password = 

# The address the email is sent from
#
# input: Email Address
# required: if login or attack = true
from = 

# The address(es) the email is sent to
#
# input: Email Addresses in a comma seperated list spaces without
# required: if login or attack = true
to = 

#-----------------------#
#        HP FEEDS       #
#-----------------------#
[output-hpfeeds]

# All activity will be logged to a hpfeeds broker for dissemination 
# between the honeypot community. 
# Authentication attempts will be logged to honssh.auth
# Sessions will be logged to honssh.sessions
#
# input: true/false
# required: yes
# default: false
enabled = false

# The server address of the hpfeeds broker
#
# input: Text
# required: if enabled = true
server = 

# The server port of the hpfeeds broker
#
# input: Number
# required: if enabled = true
port = 20000

# Your hpfeeds authentication identity
#
# input: Text
# required: if enabled = true
identifier = 

# Your hpfeeds authentication secret
#
# input: Text
# required: if enabled = true
secret = 

#-----------------------#
#         APP HOOKS     #
#-----------------------#
[output-app_hooks]

# This plugin allows you to script your own output commands
#
# input: true/false
# required: YES
# default: false
enabled = false

# The path to the command to run
#
# input: Text
# required: if enabled = true
command_path = 

# The arguments to pass to the command
# use %s for all the arguments passed by the honeypot
#
# input: Text
# required: if enabled = true
command_args = 

#-----------------------#
#     PACKET LOGGING    #
#-----------------------#
[packet_logging]

# Set to true to enable plugins to use the packet_logged function
#
# input: true/false
# required: YES
# default: false
enabled = false

[output-packets]

# Log all SSH Packets to text file (.log-adv)
#
# dependency: packet_logging MUST be enabled
# input: true/false
# required: YES
# default: false
enabled = false

#-----------------------#
#         SLACK         #
#-----------------------#
[output-slack]

# Set to true to enable outputting to a Slack channel
#
# input: true/false
# required: YES
# default: false
enabled = false

# The webhook URL for Slack
#
# input: Text
# required: if enabled = true
webhook-url = 

#-----------------------#
#       CONTRIBUTE      #
#-----------------------#
[output-contribute]

# I created this project because I like watching what people do on honeypots.
# This plugin simply posts the data from each session to me (no private information, just data generated by HonSSH).
# Feel free to turn it off.
#
# input: true/false
# required: YES
# default: false
enabled = false